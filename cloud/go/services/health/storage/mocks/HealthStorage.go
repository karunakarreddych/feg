/*
Copyright (c) Facebook, Inc. and its affiliates.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.
*/

// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import protos "magma/feg/cloud/go/protos"

// HealthStorage is an autogenerated mock type for the HealthStorage type
type HealthStorage struct {
	mock.Mock
}

// GetHealth provides a mock function with given fields: networkID, gatewayID
func (_m *HealthStorage) GetHealth(networkID string, gatewayID string) (*protos.HealthStats, error) {
	ret := _m.Called(networkID, gatewayID)

	var r0 *protos.HealthStats
	if rf, ok := ret.Get(0).(func(string, string) *protos.HealthStats); ok {
		r0 = rf(networkID, gatewayID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*protos.HealthStats)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(networkID, gatewayID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateHealth provides a mock function with given fields: networkID, gatewayID, health
func (_m *HealthStorage) UpdateHealth(networkID string, gatewayID string, health *protos.HealthStats) error {
	ret := _m.Called(networkID, gatewayID, health)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, *protos.HealthStats) error); ok {
		r0 = rf(networkID, gatewayID, health)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
