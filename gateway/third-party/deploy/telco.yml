---
- name: Set up development pre-reqs on a local machine
  hosts: telco
  become: yes
  environment:
    DEBIAN_FRONTEND: "noninteractive"

  vars:
    user: vagrant
    gopath: '/home/{{ user }}/magma/feg/gateway/third-party/go'
    gobin: '/home/{{ user }}/magma/telco/go/bin'
    golang_tar: go1.11.linux-amd64.tar.gz
    go_install_path: /usr/local
    go_bin_path: '{{ go_install_path }}/go/bin'
    godeps:
      - github.com/stretchr/testify/assert
      - golang.org/x/net/context
      - github.com/golang/protobuf/protoc-gen-go
      - google.golang.org/grpc
      - github.com/golang/glog
      - github.com/ishidawataru/sctp
# The following packages are in development, use local copies
#      - github.com/fiorix/go-diameter/diam

  tasks:
    - name: Check that Ansible version is >=2.2
      assert:
        that: ansible_version.major > 2 or (ansible_version.major == 2 and ansible_version.minor >= 2)
        msg: "Ansible upgrade needed. Current version is {{ ansible_version.full }}"

    - name: Update Repository
      apt_repository: repo='ppa:ubuntu-lxc/stable' state=present update_cache=true

    - name: Install prereqs for magma telco
      apt: pkg={{ item }} state=present update_cache=true
      with_items:
        - git
        - curl
        - realpath
        - unzip
        - daemontools

    - name: Download Golang tar
      get_url: url=https://dl.google.com/go/{{ golang_tar }} dest=/home/{{ user }}/{{ golang_tar }}

    - name: Extract Golang
      unarchive:
        src: /home/{{ user }}/{{ golang_tar }}
        dest: "{{ go_install_path }}"
        remote_src: yes

    - name: Remove Golang tar
      file: path=/home/{{ user }}/{{ golang_tar }} state=absent

    - name: Create the /var/opt/magma directory
      file: path=/var/opt/magma state=directory

    - name: Create the common shared directory for binaries
      file: path=/home/{{ user }}/magma/telco/go/bin state=directory

    - name: Create a symlink for the binaries
      file: src=/home/{{ user }}/magma/telco/go/bin path=/var/opt/magma/bin state=link force=yes

    - name: Get protoc version
      command: protoc --version
      ignore_errors: true
      register: pbversion

    - name: Install protobuf compiler
      command: "{{ item }}"
      with_items:
        - curl -Lfs https://github.com/google/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip
        - unzip protoc3.zip -d protoc3
        - mv protoc3/bin/protoc /bin/protoc
        - chmod a+rx /bin/protoc
        - mv protoc3/include/google /usr/include/
        - chmod -R a+Xr /usr/include/google
        - rm -rf protoc3.zip protoc3
      when: (pbversion is failed) or not (pbversion.stdout|match("^libprotoc 3."))

    - name: Set Go environment vars
      tags: magma-telco-dev
      lineinfile: >
        dest=/home/{{ user }}/.profile
        state=present
        line="{{ item }}"
      with_items:
        - export GOBIN={{ gobin }}
        - export PATH=$PATH:{{ go_bin_path }}:$GOBIN
        - export GOPATH=$(go env GOPATH):{{ gopath }}

    - name: Install Go packages
      become: yes
      become_user: "{{ user }}"
      command: go get "{{ item }}"
      environment:
        PATH: '{{ ansible_env.PATH }}:{{ go_bin_path }}'
      with_items:
        - "{{ godeps }}"

